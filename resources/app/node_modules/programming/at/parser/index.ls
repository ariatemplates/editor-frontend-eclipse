require! {
# -------------------------------------------------------------------------- 3rd
	_: lodash
# -------------------------------------------------------------------------- App
	pegParser: 'pegjs-parser/parser'
# ------------------------------------------------------------------------ Input
	parser: './grammar'
	htmlParser: '../../html/parser'
}
# ------------------------------------------------------------------ Extractions

{Parser:PEGParser} = pegParser



class Parser extends PEGParser
	~> super parser

	post-process: (graph) -> graph
		# graph.traverse (node) -> if node.type.element is 'block'
		# 	htmlNodes = _.filter node.children, (.type.element is null)
		# 	htmlValue = [child.properties.value for child in htmlNodes] * ''
		# 	node.add 'html' htmlParser.parse htmlValue
		# graph



module.exports = Parser!

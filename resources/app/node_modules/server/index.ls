require! {
# -------------------------------------------------------------------------- 3rd
	_: lodash
	zappa: 'zappajs'
# ---------------------------------------------------------------------- Own STD
	'server/rpc'
# -------------------------------------------------------------------------- App
	'./helpers'
}



module.exports = (routes, options, logger) ->
	# Pre-processing -----------------------------------------------------------

	log = if options.log => helpers.log else ->

	# network ------------------------------------------------------------------

	{network} = options

	network ?= options

	# statics ------------------------------------------------------------------

	{statics} = options
	statics ?= options

	{relative} = network
	relative ?= []
	{absolute} = network
	absolute ?= []



	# Execution ----------------------------------------------------------------

	helpers.findAvailablePort network with {cb: !(port) ->
		<-! zappa port

		log [
			"Server started on port: #port"
			'Static locations: '
			[" - #path" for path in relative ++ absolute]
		] { +wrap, char: '#' x: 40, +prefix }

		# Use middleware -------------------------------------------------------

		@use ... [
			\bodyParser
			@app.router
			\static
		] ++ [@express.static "#__dirname/#path" for path in relative] ++ [@express.static path for path in absolute]



		########################################################################
		# Routes
		########################################################################

		# Pre-processing -------------------------------------------------------

		routes ?:= []

		result = []
		for route in routes
			output = {}

			# Pre-processing ---------------------------------------------------

			route = switch typeof! route
			| 'String' => {type: route}
			| 'Object' => route
			| _ => {}

			# type -------------------------------------------------------------

			{type} = route

			defaults = switch type
			| 'rpc' => {
				method: \post
				url: '/rpc'
				handler: do ->
					RPC = new rpc.RPCManager logger
					for mod in route.modules => RPC.addModule mod
					!-> RPC.exec @
			}
			| 'shutdown'
				url: '/shutdown'
				handler: !->
					msg = 'Exiting backend application.'
					logger.info msg
					@send msg
					process.exit 0
			| 'ping' => {
				url: '/ping'
				status: 200
			}
			| _ => {}

			route = defaults with route

			# handler ----------------------------------------------------------

			{handler, status, view} = route

			if not handler? => if status? => handler = let route.status => !-> @send status
			if not handler? => if view? => handler = let route.view => !-> @render (view): {hardcode}

			if not handler? => continue

			output <<< {handler}

			# method -----------------------------------------------------------

			{method} = route

			method ?= \get

			output <<< {method}

			# url --------------------------------------------------------------

			{url} = route

			url ?= '/'

			output <<< {url}

			# Pushing ----------------------------------------------------------

			result.push output

		routes := result

		# Execution ------------------------------------------------------------

		for route in routes
			{url, method} = route

			log "Creating route: #{method.toUpperCase!} #{url}"

			@[method.toLowerCase!] {
				(url):  let route => ->
					if route.log?pre? => log that
					route.handler ...
					if route.log?post? => log that
			}
	}

require! {
# -------------------------------------------------------------------------- App
	'./http'
}


/**
 * @todo Use real JS Proxies (harmony)
 */
class RPCProxy
	(@module, @logger) ~>

	exec: (route) ->
		{method, argument} = route.req.body
		@logger.info method
		@logger.info argument

		if @module[method]?
			try
				route.json @module[method] argument
			catch exception
				route.send http.codes.InternalError, "#exception"
				@logger.error exception
		else
			route.send http.codes.NotImplemented



/**
 * @todo Review collection design (add, remove methods)
 */
class RPCManager
	(@logger) ~> @modules = {}



	addModule: (module) ->
		@add module@@displayName.toLowerCase!, module

	add: (name, module) ->
		if @modules[name]? => throw 'Module already existing'

		@modules[name] = RPCProxy module, @logger

	remove: (name) -> if @modules[name]? => delete @modules[name]



	exec: (route) ->
		{module} = route.req.body
		@logger.info module

		if @modules[module]? => @modules[module].exec route
		else route.send http.codes.NotImplemented





exports <<< {
	RPCProxy
	RPCManager
}

var oop = require('std/oop');



var STDError = oop.Class({
	name: 'Standard Error',
	displayName: 'STD Error',

	desc: 'A native error wrapper.',

	schema: {
		inputToSpec: {
			'String': 'type'
		},
		properties: [
			{names: ['type', 'class', 'category', 'name', 'id', 'identifiant', 'code'], type: oop.types.String, required: true},
			{names: ['message', 'msg', 'description', 'desc', 'text', 'txt'], type: oop.types.String}
		]
		// acceptFreeProperties: true
	},

	factories: {
		msg: {args: {type: 0, msg: 1}}
	},

	init: function() {
		Error.captureStackTrace(this, this.constructor);
	}

});

var NotImplemented = oop.Class({
	name: '"Not Implemented" Error',
	displayName: 'Not Implemented',

	desc: 'A "Not Implmented" error.',

	extend: STDError,

	schema: {
		inputToSpec: {
			'String': 'method'
		},
		properties: [
			{names: ['method', 'function', 'fn', 'member', 'name'], type: oop.types.String}
		]
	},

	init: function() {
		this.type = 'NotImplemented';
		STDError.call(this);
	}

});



exports.STDError = STDError;
exports.NotImplemented = NotImplemented;

require! {
	'std/string'
}



/**
 * Model for a source code.
 *
 * Kind of equivalent (but more specific) to the Document model in Eclipse.
 */
class Code
	(@parser) ~>
		@ <<< {
			source: ''
			graph: void
		}



	update-preprocess: (input) ->
		# Factory --------------------------------------------------------------

		spec = switch typeof! input
		| 'String' => {text: input}
		| 'Object' => input
		| _ => {}

		# --------------------------------------------------------------- length

		{length, size} = spec

		length? ?= size

		# ---------------------------------------------------------------- start

		{start, offset, beginning} = spec

		start? ?= offset
		start? ?= beginning

		# ------------------------------------------------------------------ end

		{end} = spec

		# ------------------------------------------------ Inferences & defaults

		if length?
			if start? => end ?= start + length
			if end? => start ?= end - length

		start ?= 0
		end ?= @source.length - 1

		# ----------------------------------------------------------------- text

		{text, source, content} = spec

		text? ?= source
		text? ?= content

		text ?= ''

		# Return ---------------------------------------------------------------

		{start, end, text}

	update: (input) ->
		{start, end, text} = @update-preprocess input

		string.replace @source, start, end, text
		@graph = @parser.parse @source



exports <<< {
	Code
}

var Class = require('oop').Class;

var Node = require('node').Node;



function arrayFromSequence(sequence, index) {
	var result = [];
	for (var i = 0, length = sequence.length; i < length; i++) {
		var part = sequence[i];
		result.push(part[index]);
	}
	return result;
};

function valueFromSequence(sequence, index) {
	return arrayFromSequence(sequence, index).join('');
};

function stringFromGuardedSequence(sequence) {
	return valueFromSequence(sequence, 1);
};

function listFromSequence(head, rest) {
	return [head].concat(arrayFromSequence(rest, 1));
}



openingCurlyBracket = '{';
closingCurlyBracket = '}';



var NodeInstancier = Class({
	name: 'NodeInstancier',

	constructor: function(language) {
		this.language = language != null ? language : null;
	},

	prototype: {
		create: function(element, line, column, index, end) {
			return new Node(this.language, element, line, column, index, end);
		}
	}
});






exports.arrayFromSequence = arrayFromSequence;
exports.valueFromSequence = valueFromSequence;
exports.stringFromGuardedSequence = stringFromGuardedSequence;
exports.listFromSequence = listFromSequence;
exports.openingCurlyBracket = openingCurlyBracket;
exports.closingCurlyBracket = closingCurlyBracket;
exports.NodeInstancier = NodeInstancier;

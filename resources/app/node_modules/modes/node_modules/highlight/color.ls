class Color
	############################################################################
	# Construction
	############################################################################

	@factory = (input) -> if input instanceof @@ => input else new @@ ...

	colorComponentFactory = (value) ->
		value ?= 0
		value >?= 0
		value <?= 255
		value

	(input) ~>
		spec = switch typeof! input
		| 'String' => @@defaults[input] ? throw {
			msg: 'No default color under this name'
			name: input
		}
		| 'Number' => @@greyScale input
		| 'Object' => input
		| _ => {}

		# red ------------------------------------------------------------------

		{red, r} = spec
		red? ?= r
		red = colorComponentFactory red
		@ <<< {red}

		# green ------------------------------------------------------------------

		{green, g} = spec
		green? ?= g
		green = colorComponentFactory green
		@ <<< {green}

		# blue ------------------------------------------------------------------

		{blue, b} = spec
		blue? ?= b
		blue = colorComponentFactory blue
		@ <<< {blue}



	############################################################################
	# Factories & constants
	############################################################################

	@rgb = (r, g, b) -> @@ {r, g, b}

	@greyScale = (a) -> @rgb a, a, a
	@blueScale = @rgb 0 0 _
	@greenScale = @rgb 0 _, 0
	@redScale = @rgb _, 0 0

	@defaults = {
		black: @greyScale 0
		white: @greyScale 255
		grey: @greyScale 128

		red: @redScale 255
		green: @greenScale 255
		blue: @blueScale 255

		# ...
	}



exports <<< {
	Color
}

require! {
	'./style'
}
{Style} = style



class Stylesheet
	~>
		@ <<< {
			styles: {}
			default: void
		}

	add: (input) ->
		spec = switch typeof! input
		| 'Object' => input
		| _ => {}

		# id -------------------------------------------------------------------

		{id, type, token, key} = spec

		id? ?= type
		id? ?= token
		id? ?= key

		# style ----------------------------------------------------------------

		{style} = spec

		style ?= spec

		style = Style.factory style

		# Execution ------------------------------------------------------------

		if not id? => @default = style
		else @styles[id] = style



	############################################################################
	# Serialization
	############################################################################

	serialize-color: (color) -> color && {
		r: color.red
		g: color.green
		b: color.blue
	}

	serialize-style: (style) -> {
		color: @serialize-color style.color
		bgcolor: @serialize-color style.background

		font: style.font.family
		(style.font).height
		(style.font).style
	}

	serialize-style-short: (style) -> {
		c: @serialize-color style.color
		bg: @serialize-color style.background

		f: style.font.family
		h: style.font.height
		s: style.font.style
	}

	serialize: -> {
		default: @serialize-style @default
		styles: {[key, @serialize-style style] for key, style of @styles}
	}



exports <<< {
	Stylesheet
}

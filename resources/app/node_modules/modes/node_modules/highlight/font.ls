class Font
	@factory = (input) -> if input instanceof @@ => input else new @@ ...

	(input) ~>
		spec = switch typeof! input
		| 'String' => {family: input}
		| 'Number' => {height: input}
		| 'Boolean' => {bold: input}
		| 'Object' => input
		| _ => {}

		# family ---------------------------------------------------------------

		{family, name, f} = spec

		family? ?= name
		family? ?= f

		# if family? and typeof! family isnt 'String' => throw {
		# 	msg: 'Wrong type for argument'
		# 	arg: 'family'
		# 	expected: 'String'
		# 	actual: typeof! family
		# }

		@family? = family

		# height ---------------------------------------------------------------

		{height, h} = spec

		height? ?= h

		if height? and typeof! height isnt 'Number' => throw {
			msg: 'Wrong type for argument'
			arg: 'height'
			expected: 'Number'
			actual: typeof! height
		}

		if height? => height >?= 0

		@height? = height

		# bold -----------------------------------------------------------------

		{bold, b} = spec

		bold? ?= b

		# if bold? and typeof! bold isnt 'Boolean' => throw {
		# 	msg: 'Wrong type for argument'
		# 	arg: 'bold'
		# 	expected: 'Boolean'
		# 	actual: typeof! bold
		# }

		@bold? = bold

		# italic ---------------------------------------------------------------

		{italic, i} = spec

		italic? ?= i

		# if italic? and typeof! italic isnt 'Boolean' => throw {
		# 	msg: 'Wrong type for argument'
		# 	arg: 'italic'
		# 	expected: 'Boolean'
		# 	actual: typeof! italic
		# }

		@italic? = italic

		# underline ------------------------------------------------------------

		{underline, u} = spec

		underline? ?= u

		# if underline? and typeof! underline isnt 'Boolean' => throw {
		# 	msg: 'Wrong type for argument'
		# 	arg: 'underline'
		# 	expected: 'Boolean'
		# 	actual: typeof! underline
		# }

		@underline? = underline

		# strike ---------------------------------------------------------------

		{strike, s} = spec

		strike? ?= s

		# if strike? and typeof! strike isnt 'Boolean' => throw {
		# 	msg: 'Wrong type for argument'
		# 	arg: 'strike'
		# 	expected: 'Boolean'
		# 	actual: typeof! strike
		# }

		@strike? = strike



exports <<< {
	Font
}
